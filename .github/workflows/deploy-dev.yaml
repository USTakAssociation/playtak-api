name: Playtak API service deploy Dev

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Run Unit tests
        run: npm run test

      - name: Build
        run: npm run build
      - uses: dopplerhq/secrets-fetch-action@v1.1.0
        id: doppler
        with:
          doppler-token: ${{ secrets.DOPPLER_TOKEN }}
          inject-env-vars: true
      # - name: Prep Artifact
      #   run : |
      #     touch .env
      #     echo "NODE_ENV = production" >> .env
      #     echo "CORS_DOMAIN = ${CORS_DOMAIN}" >> .env
      #     cat .env
      #     mv .env ./dist
      #     mv node_modules ./dist
      #     tar -czf artifact.tar.gz ./dist 
      # - name: Deploy
      #   env: 
      #       PRIVATE_KEY: ${{ secrets.PRIVATE_KEY  }}
      #       HOSTNAME : ${{ secrets.HOSTNAME }}
      #       USER_NAME : ${{ secrets.USER_NAME }}
      #   run: |
      #     echo "$PRIVATE_KEY" > private_key.pem && chmod 0400 private_key.pem
      #     scp -o StrictHostKeyChecking=no -i private_key.pem artifact.tar.gz ${USER_NAME}@${HOSTNAME}:~
      #     ssh -o StrictHostKeyChecking=no -i private_key.pem ${USER_NAME}@${HOSTNAME} '
      #       mkdir playtak-api-tmp
      #       tar -xzf artifact.tar.gz -C ./playtak-api-tmp
      #       rm -rf ~/apps/playtak-api
      #       mv playtak-api-tmp/dist ~/apps/playtak-api
      #       rm -rf playtak-api-temp
      #       rm artifact.tar.gz
      #       pm2 restart playtak-api-service --update-env
      #     '